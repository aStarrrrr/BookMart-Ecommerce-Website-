@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@model BookMart.Models.ViewModels.StockPagedViewModel

@{
    ViewData["Title"] = "Stock Management";
    Layout = "adminLayout"; // Assuming you have an admin layout
}

<link href="~/css/site.css" rel="stylesheet" />
<link href="~/css/AddBook.css" rel="stylesheet" />

<main class="main-content-addbook">
    <div class="container-fluid">
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show m-3" role="alert">
                @TempData["SuccessMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show m-3" role="alert">
                @TempData["ErrorMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <div class="row g-3 mb-3">
            <div class="col-12 col-sm-6 col-xl-3">
                <div class="card border-0 shadow-sm">
                    <div class="card-body d-flex align-items-center gap-3">
                        <div class="d-flex align-items-center justify-content-center bg-light rounded" style="width: 40px; height: 40px;">
                            <i class="fas fa-boxes text-black-50"></i>
                        </div>
                        <div>
                            <div class="small text-muted mb-1">Total Book Types</div>
                            <div class="fw-bold fs-5">@Model.TotalBooks</div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-12 col-sm-6 col-xl-3">
                <div class="card border-0 shadow-sm">
                    <div class="card-body d-flex align-items-center gap-3">
                        <div class="d-flex align-items-center justify-content-center bg-light rounded" style="width: 40px; height: 40px;">
                            <i class="fas fa-exclamation-triangle text-black-50"></i>
                        </div>
                        <div>
                            <div class="small text-muted mb-1">Low Stock</div>
                            <div class="fw-bold fs-5">@Model.Books.Count(b => b.StockQuantity > 0 && b.StockQuantity < b.MinStockLevel)</div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-12 col-sm-6 col-xl-3">
                <div class="card border-0 shadow-sm">
                    <div class="card-body d-flex align-items-center gap-3">
                        <div class="d-flex align-items-center justify-content-center bg-light rounded" style="width: 40px; height: 40px;">
                            <i class="fas fa-times-circle text-black-50"></i>
                        </div>
                        <div>
                            <div class="small text-muted mb-1">Out of Stock</div>
                            <div class="fw-bold fs-5">@Model.Books.Count(b => b.StockQuantity <= 0)</div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-12 col-sm-6 col-xl-3">
                <div class="card border-0 shadow-sm">
                    <div class="card-body d-flex align-items-center gap-3">
                        <div class="d-flex align-items-center justify-content-center bg-light rounded" style="width: 40px; height: 40px;">
                            <i class="fas fa-check-circle text-black-50"></i>
                        </div>
                        <div>
                            <div class="small text-muted mb-1">In Stock</div>
                            <div class="fw-bold fs-5">@Model.Books.Count(b => b.StockQuantity >= b.MinStockLevel)</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="card">
            <div class="card-header d-flex align-items-center justify-content-between">
                <span class="fw-semibold">Stock Inventory</span>
            </div>
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover align-middle mb-0">
                        <thead>
                            <tr>
                                <th>Book</th>
                                <th>Genre</th>
                                <th class="text-center">Stock Level</th>
                                <th>Price</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.Books.Any())
                            {
                                @foreach (var item in Model.Books)
                                {
                                    <tr>
                                        <td>
                                            <div class="d-flex align-items-center">
                                                <img src="@(item.CoverImageURL ?? "/images/default-book.png")" alt="Book Cover" style="width: 40px; height: 60px; object-fit: cover;" class="me-3 rounded shadow-sm">
                                                <div>
                                                    <div class="fw-semibold">@item.Title</div>
                                                    <small class="text-muted">@item.Author</small>
                                                </div>
                                            </div>
                                        </td>
                                        <td>@item.GenreName</td>
                                        <td class="text-center">
                                            <span>@item.StockQuantity</span>
                                        </td>
                                        <td>₹@item.Price.ToString("N2")</td>
                                        <td>
                                            @{
                                                var status = item.StockStatus?.ToLower();
                                                var badgeClass = status switch {
                                                    "in stock" => "bg-success text-white",
                                                    "out of stock" => "bg-danger text-white",
                                                    "low stock" => "bg-warning text-dark",
                                                    _ => "bg-light text-dark"
                                                };
                                            }
                                            <span class="badge rounded-pill fw-normal px-3 py-1 @badgeClass">@item.StockStatus</span>
                                        </td>
                                        <td>
                                            <a asp-action="UpdateStock" asp-route-bookId="@item.BookId" class="btn btn-sm btn-outline" title="Update Stock">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="6" class="text-center">No books found.</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</main>

<!-- Pagination Controls -->
@if (Model.TotalPages > 1)
{
    <nav class="d-flex justify-content-center mt-4" aria-label="Stock pagination">
        <ul class="pagination pagination-black">
            <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                <a class="page-link" asp-action="Stock" asp-route-page="@(Model.CurrentPage - 1)">Previous</a>
            </li>
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link" asp-action="Stock" asp-route-page="@i">@i</a>
                </li>
            }
            <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                <a class="page-link" asp-action="Stock" asp-route-page="@(Model.CurrentPage + 1)">Next</a>
            </li>
        </ul>
    </nav>
}

    <script>
        // Any specific JS for this page, if needed.
        // The sidebar JS should be in your main layout or site.js
    </script>


<style>
    /* Minimal style for status badge if not using full Bootstrap theme classes */
    .status-badge {
        padding: 0.35em 0.65em;
        font-size: .75em;
        font-weight: 700;
        line-height: 1;
        color: #fff;
        text-align: center;
        white-space: nowrap;
        vertical-align: baseline;
        border-radius: .375rem; /* Bootstrap 5 uses .375rem */
    }
    /* Ensure text color contrasts with bg-opacity-10 */
    .text-danger { color: #dc3545 !important; }
    .text-warning { color: #ffc107 !important; }
    .text-success { color: #198754 !important; }

    /* For stat cards alignment */
    .stat-card {
        background-color: #fff;
        border-radius: .5rem;
        padding: 1.25rem;
        box-shadow: 0 0.125rem 0.25rem rgba(0,0,0,.075);
        height: 100%;
    }
    .stat-icon {
        width: 48px;
        height: 48px;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
        font-size: 1.25rem;
    }

    .pagination-black .page-link {
        color: #111 !important;
        background-color: #fff !important;
        border: 1px solid #111 !important;
        transition: background 0.2s, color 0.2s;
    }
    .pagination-black .page-link:hover,
    .pagination-black .page-link:focus {
        color: #fff !important;
        background-color: #111 !important;
        border-color: #111 !important;
    }
    .pagination-black .page-item.active .page-link {
        color: #fff !important;
        background-color: #111 !important;
        border-color: #111 !important;
    }
    .pagination-black .page-item.disabled .page-link {
        color: #aaa !important;
        background-color: #fff !important;
        border-color: #eee !important;
        pointer-events: none;
    }
</style>