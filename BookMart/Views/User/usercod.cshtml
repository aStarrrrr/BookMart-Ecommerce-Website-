@model BookMart.Models.CheckoutViewModel
@using System.Globalization

@{
    ViewData["Title"] = "Cash on Delivery";
    Layout = "userCommonLayout"; // Using the consistent checkout layout
}

<link href="~/css/user.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />

<div class="container mt-5 pt-5">
    <!-- Checkout Steps -->
    <div class="checkout-steps mb-5">
        <div class="step active">1</div>
        <div class="step active">2</div>
        <div class="step active">3</div>
        <div class="step">4</div>
    </div>

    <div class="row">
        <!-- COD Confirmation -->
        <div class="col-lg-8">
            <div class="card shadow-sm">
                <div class="card-header bg-white py-3">
                    <h4 class="mb-0">
                        <i class="fas fa-money-bill-wave me-2"></i>Cash on Delivery Confirmation
                    </h4>
                </div>
                <div class="card-body">
                    <div class="verification-badge mb-4">
                        <i class="fas fa-shield-alt"></i>
                        <span>Your order is secure and confirmed</span>
                    </div>

                    <!-- Delivery Instructions -->
                    <div class="instruction-card">
                        <i class="fas fa-info-circle instruction-icon"></i>
                        <h5>Important Instructions</h5>
                        <ul class="mb-0">
                            <li>Keep ₹@((Model.TotalAmount + 49).ToString("N2")) ready for payment during delivery (including ₹49 COD fee)</li>
                            <li>Verify the package before making the payment</li>
                            <li>Payment should be made to the delivery person only</li>
                            <li>Ask for payment receipt after successful payment</li>
                        </ul>
                    </div>

                    <!-- Delivery Timeline -->
                    <div class="delivery-timeline mt-4">
                        <div class="timeline-item active">
                            <div class="timeline-icon">
                                <i class="fas fa-check-circle"></i>
                            </div>
                            <div class="timeline-content">
                                <h6>Order Confirmed</h6>
                                <p class="text-muted mb-0">Your order is being processed</p>
                                <small class="text-muted">@DateTime.Now.ToString("MMM dd,yyyy hh:mm tt")</small>
                            </div>
                        </div>
                        <div class="timeline-item">
                            <div class="timeline-icon">
                                <i class="fas fa-box"></i>
                            </div>
                            <div class="timeline-content">
                                <h6>Processing</h6>
                                <p class="text-muted mb-0">We're preparing your order</p>
                                <small class="text-muted">Expected: @DateTime.Now.AddDays(1).ToString("MMM dd,yyyy")</small>
                            </div>
                        </div>
                        <div class="timeline-item">
                            <div class="timeline-icon">
                                <i class="fas fa-truck"></i>
                            </div>
                            <div class="timeline-content">
                                <h6>Shipping</h6>
                                <p class="text-muted mb-0">Your order will be shipped</p>
                                <small class="text-muted">Expected: @DateTime.Now.AddDays(2).ToString("MMM dd,yyyy")</small>
                            </div>
                        </div>
                        <div class="timeline-item">
                            <div class="timeline-icon">
                                <i class="fas fa-home"></i>
                            </div>
                            <div class="timeline-content">
                                <h6>Delivery</h6>
                                <p class="text-muted mb-0">Estimated delivery date</p>
                                <small class="text-muted">Expected: @DateTime.Now.AddDays(3).ToString("MMM dd,yyyy")</small>
                            </div>
                        </div>
                    </div>

                    <!-- Action Buttons -->
                    <form asp-controller="User" asp-action="ProcessPayment" method="post" id="codPaymentForm">
                        @Html.AntiForgeryToken()
                        @* Hidden fields to pass ALL CheckoutViewModel properties back to ProcessPayment *@
                        <input type="hidden" asp-for="SubTotal" />
                        <input type="hidden" asp-for="ShippingCost" />
                        <input type="hidden" asp-for="TaxAmount" />
                        <input type="hidden" asp-for="TotalAmount" />
                        <input type="hidden" asp-for="ShippingFirstName" />
                        <input type="hidden" asp-for="ShippingLastName" />
                        <input type="hidden" asp-for="ShippingAddressLine1" />
                        <input type="hidden" asp-for="ShippingAddressLine2" />
                        <input type="hidden" asp-for="ShippingCity" />
                        <input type="hidden" asp-for="ShippingState" />
                        <input type="hidden" asp-for="ShippingPinCode" />
                        <input type="hidden" asp-for="ShippingPhone" />
                        <input type="hidden" asp-for="ShippingEmail" />
                        <input type="hidden" asp-for="SaveAddressForFuture" />
                        <input type="hidden" name="paymentMethod" value="COD" />
                        <input type="hidden" asp-for="CouponCode" />
                        <input type="hidden" asp-for="CouponDiscount" />

                        @* Hidden fields for CartItems *@
                        @for (int i = 0; i < Model.CartItems.Count; i++)
                        {
                            <input type="hidden" name="CartItems[@i].BookID" value="@Model.CartItems[i].BookID" />
                            <input type="hidden" name="CartItems[@i].Quantity" value="@Model.CartItems[i].Quantity" />
                            <input type="hidden" name="CartItems[@i].Price" value="@Model.CartItems[i].Price" />
                        }

                        <div class="d-grid gap-2 d-md-flex justify-content-md-center mt-4">
                            <button type="submit" class="btn btn-dark btn-lg px-4 py-2">
                                <i class="fas fa-receipt me-2"></i>Confirm COD Order
                            </button>
                            <a href="@Url.Action("UserHome", "User")" class="btn btn-outline-dark btn-lg px-4 py-2">
                                <i class="fas fa-home me-2"></i>Continue shopping
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- Order Summary -->
        <div class="col-lg-4 mt-4 mt-lg-0">
            <div class="card shadow-sm">
                <div class="card-header bg-white py-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <h4 class="mb-0">Order Summary</h4>
                        <span class="badge bg-dark">Order Preview</span>
                    </div>
                </div>
                <div class="card-body">
                    <!-- Delivery Address -->
                    <div class="mb-4">
                        <h5 class="mb-3">Delivery Address</h5>
                        <p class="mb-1">@Model.ShippingFirstName @Model.ShippingLastName</p>
                        <p class="mb-1">@Model.ShippingAddressLine1</p>
                        @if (!string.IsNullOrWhiteSpace(Model.ShippingAddressLine2))
                        {
                            <p class="mb-1">@Model.ShippingAddressLine2</p>
                        }
                        <p class="mb-0">@Model.ShippingCity, @Model.ShippingState @Model.ShippingPinCode</p>
                    </div>

                    <hr>

                    <!-- Order Items -->
                    <div class="order-items mb-4">
                        @if (Model.CartItems != null && Model.CartItems.Any())
                        {
                            @foreach (var item in Model.CartItems)
                            {
                                <div class="d-flex align-items-center mb-3">
                                    <img src="@item.Book?.CoverImageURL" alt="@item.Book?.Title" class="rounded" style="width: 50px; height: 70px; object-fit: cover;">
                                    <div class="ms-3">
                                        <h6 class="mb-0">@item.Book?.Title</h6>
                                        <small class="text-muted">Qty: @item.Quantity</small>
                                    </div>
                                    <span class="ms-auto">₹@((item.Quantity * item.Price).ToString("N0"))</span>
                                </div>
                            }
                        }
                        else
                        {
                            <p class="text-muted text-center">No items found for this order.</p>
                        }
                    </div>

                    <!-- Cost Breakdown -->
                    <div class="border-top pt-3">
                        @{
                            decimal codFee = 49M;
                            decimal displayTotalWithCod = Math.Ceiling(Model.SubTotal) + Math.Ceiling(Model.ShippingCost) + Math.Ceiling(Model.TaxAmount) + codFee - Math.Ceiling(Model.CouponDiscount);
                        }
                        <div class="d-flex justify-content-between mb-2">
                            <span>Subtotal</span>
                            <span>₹@Math.Ceiling(Model.SubTotal).ToString("N0")</span>
                        </div>
                        <div class="d-flex justify-content-between mb-2">
                            <span>Shipping</span>
                            <span class="text-success">₹@Math.Ceiling(Model.ShippingCost).ToString("N0")</span>
                        </div>
                        <div class="d-flex justify-content-between mb-2">
                            <span>Tax</span>
                            <span>₹@Math.Ceiling(Model.TaxAmount).ToString("N0")</span>
                        </div>
                        <div class="d-flex justify-content-between mb-2">
                            <span>COD Fee</span>
                            <span class="text-danger">₹@codFee.ToString("N0")</span>
                        </div>
                        @if (!string.IsNullOrWhiteSpace(Model.CouponCode) && Model.CouponDiscount > 0)
                        {
                            <div class="d-flex justify-content-between mb-2">
                                <span>Coupon Discount (COGNIZANT -10%)</span>
                                <span class="text-success">-₹@Math.Ceiling(Model.CouponDiscount).ToString("N0")</span>
                            </div>
                        }
                        <hr>
                        <div class="d-flex justify-content-between">
                            <strong>Total</strong>
                            <strong class="h4">₹@displayTotalWithCod.ToString("N0")</strong>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .instruction-card {
        background-color: #f8f9fa;
        border-left: 4px solid #212529;
        padding: 1.5rem;
        border-radius: 5px;
        margin-bottom: 2rem;
    }

    .instruction-icon {
        color: #212529;
        font-size: 1.5rem;
        margin-bottom: 1rem;
    }

    .delivery-timeline {
        position: relative;
        padding: 1rem 0;
    }

    .timeline-item {
        display: flex;
        align-items: flex-start;
        margin-bottom: 2rem;
        position: relative;
    }

    .timeline-item:not(:last-child)::before {
        content: '';
        position: absolute;
        left: 1.25rem;
        top: 2.5rem;
        bottom: -2rem;
        width: 2px;
        background-color: #e9ecef;
    }

    .timeline-icon {
        width: 2.5rem;
        height: 2.5rem;
        border-radius: 50%;
        background-color: #e9ecef;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-right: 1rem;
        flex-shrink: 0;
    }

    .timeline-item.active .timeline-icon {
        background-color: #212529;
        color: white;
    }

    .timeline-content {
        flex-grow: 1;
    }

    .timeline-content h6 {
        margin-bottom: 0.25rem;
        color: #212529;
    }

    .btn {
        border-radius: 8px;
        transition: all 0.3s ease;
        font-weight: 500;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    }

    .btn-dark {
        background-color: #212529;
        border-color: #212529;
    }

    .btn-outline-dark {
        color: #212529;
        border-color: #212529;
    }

    .btn-outline-dark:hover {
        background-color: #212529;
        color: white;
    }

    .verification-badge {
        display: inline-flex;
        align-items: center;
        background-color: #e9ecef;
        color: #212529;
        padding: 0.5rem 1rem;
        border-radius: 20px;
        font-weight: bold;
    }

    .verification-badge i {
        margin-right: 0.5rem;
    }
</style>

@section Scripts {
    <script>
        // Add any page-specific JavaScript here
    </script>
}
